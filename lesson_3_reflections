When would you want to use a remote repository rather than keeping all your work local?
    Keeping your work local is good if you are the only one working on it or accessing it.
    It would be a good idea to create a remote repository if you are sharing with other
    people or if you  are using a service that accesses your code...
    
Why might you want to always pull changes manually rather than having 
Git automatically stay up-to-date with your remote repository?
	If multiple people are working on the same file pulling changes might 
	write over changes you've made so being able to choose when you pull
	files will make it easier to not lose your work.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
	Forks are copies of someone else's repository across github.  Clones are copies of yours (or someone else's)
	repository that you've made on your own computer.  Branches are seperate parts of a single repository that
	contain changes that you aren't ready (or may never want) to connect to your master branch.  Forks are for 
	when you want to make changes to a repository that you don't own.  Clones are for when you want to make changes 
	to a repository that you may or may not own locally. Branches are for changes that are experimental.
	
What is the benefit of having a copy of the last known state of the remote stored locally?
	It allows you to work offline.  It also allows you to check changes that have been made since the last pull
	and gives you a history to work from.
	
How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
	Probably by manually comparing code and working more directly together.  It would be easier without
	having to learn all of the git commands and how the repositories work.  It would be harder because there
	isn't an easy way to share and branch the work flow to work on new idea.s
